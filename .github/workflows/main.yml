# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-page:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        name: Set up Node.JS 14
        with:
          node-version: '14'
      - name: Build Site
        run: cd site && npm ci --only=production && npm run build && cp -r build/* ../backend/public && cd ..
        env:
          REACT_APP_API_URL: 
          CI: false
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: registry.heroku.com
          username: ${{ secrets.HEROKU_EMAIL }}
          password: ${{ secrets.HEROKU_API_KEY }}
      - name: Build and push
        uses: docker/build-push-action@v2.3.0
        with:
          context: backend
          tags: registry.heroku.com/exiva-auctioneer/web:latest
          push: true
      - name: Login to Heroku Container registry
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login 
      - name: Release to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a exiva-auctioneer web
  
  build-parser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_API_KEY }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.3.0
        with:
          push: true
          tags: docker.io/rfaita/exiva-parser:latest
          context: parser
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      
      
  build-notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_API_KEY }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.3.0
        with:
          push: true
          tags: docker.io/rfaita/exiva-notification:latest
          context: notification     
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64

  build-parser-initial-page:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_API_KEY }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.3.0
        with:
          push: true
          tags: docker.io/rfaita/exiva-parser-initial-page:latest
          context: parser-initial-page
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      